<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xsi:schemaLocation="
	 http://www.springframework.org/schema/tx
     http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
	 http://www.springframework.org/schema/mvc
	 http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
	 http://www.springframework.org/schema/jdbc 
	 http://www.springframework.org/schema/jdbc/spring-jdbc-4.0.xsd 
	 http://www.springframework.org/schema/beans 
	 http://www.springframework.org/schema/beans/spring-beans-4.0.xsd 
	 http://www.springframework.org/schema/context 
	 http://www.springframework.org/schema/context/spring-context-4.0.xsd">

	<bean name="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<property name="url" value="jdbc:mysql://localhost:3306/test" />
		<property name="username" value="root" />
		<property name="password" value="root" />
	</bean>

	<bean id="transactionManager"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
		<property name="dataSource" ref="dataSource" />
	</bean>

    <bean id="sessionFactory"
        class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
		<property name="packagesToScan" value="minyanon" />
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
				<prop key="hibernate.hbm2ddl.auto">update</prop>
				<prop key="hibernate.max_fetch_depth">3</prop>
				<prop key="hibernate.jdbc.fetch_size">50</prop>
				<prop key="hibernate.jdbc.batch_size">10</prop>
                <prop key="hibernate.show_sql">true</prop>
            </props>
        </property>
    </bean>

	<bean id="jpaVendorAdapter" class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter"/>
	
	
	
<!-- 	<bean class="minyanon.city.CityRESTToEntityService"> -->
<!-- 		<constructor-arg name="cityDao"> -->
<!-- 			<bean class="minyanon.city.CityDAO"> -->
<!-- 				<constructor-arg name="sessionFactory" ref="sessionFactory"/> -->
<!-- 			</bean> -->
<!-- 		</constructor-arg> -->
<!-- 	</bean>	 -->
	
	<bean class="minyanon.synagogue.SynagogueRESTToEntityService">
		<constructor-arg name="synagogueDao">
			<bean class="minyanon.synagogue.SynagogueDAO">
				<constructor-arg name="sessionFactory" ref="sessionFactory"/>
			</bean>
		</constructor-arg>
		<constructor-arg name="cityDao">
			<bean class="minyanon.address.city.CityDAO">
				<constructor-arg name="sessionFactory" ref="sessionFactory"/>
			</bean>
		</constructor-arg>
	</bean>
	
	
	<bean class="minyanon.prayer.shaharit.ShaharitService">
		<constructor-arg name="prayerDAO">
			<bean class="minyanon.prayer.shaharit.ShaharitDAO">
				<constructor-arg name="sessionFactory" ref="sessionFactory"/>
			</bean>
		</constructor-arg>
	</bean>
	
	<bean class="minyanon.prayer.mincha.MinchaService">
		<constructor-arg name="prayerDAO">
			<bean class="minyanon.prayer.mincha.MinchaDAO">
				<constructor-arg name="sessionFactory" ref="sessionFactory"/>
			</bean>
		</constructor-arg>
	</bean>

	<bean class="minyanon.prayer.arvit.ArvitService">
		<constructor-arg name="prayerDAO">
			<bean class="minyanon.prayer.arvit.ArvitDAO">
				<constructor-arg name="sessionFactory" ref="sessionFactory"/>
			</bean>
		</constructor-arg>
	</bean>
	
	
	
	
	<context:component-scan base-package="minyanon"/>
	<mvc:annotation-driven />
	<context:annotation-config />
	<tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true"/>
	
<!-- 	<bean class="DAOs.PrayerDAO.ShaharitDAO"/> -->
<!-- 	<bean class="DAOs.PrayerDAO.MinchaDAO"/> -->
<!-- 	<bean class="DAOs.PrayerDAO.ArvitDAO"/> -->
		
	
	

</beans> 
